// <auto-generated />
using System;
using BeeOrganizer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BeeOrganizer.Migrations
{
    [DbContext(typeof(Cebelarstvo))]
    [Migration("20221205090450_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BeeOrganizer.Models.Cebeljnjak", b =>
                {
                    b.Property<int>("CebeljnjakID")
                        .HasColumnType("int");

                    b.Property<int>("Lokacija")
                        .HasColumnType("int");

                    b.Property<string>("Naslov")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UporabnikID")
                        .HasColumnType("int");

                    b.HasKey("CebeljnjakID");

                    b.HasIndex("UporabnikID");

                    b.ToTable("Cebeljnjak", (string)null);
                });

            modelBuilder.Entity("BeeOrganizer.Models.Odhodek", b =>
                {
                    b.Property<int>("OdhodekID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<int>("Količina")
                        .HasColumnType("int");

                    b.Property<int?>("UporabnikID")
                        .HasColumnType("int");

                    b.Property<int>("Vrednost")
                        .HasColumnType("int");

                    b.Property<string>("Vrsta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OdhodekID");

                    b.HasIndex("UporabnikID");

                    b.ToTable("Odhodek", (string)null);
                });

            modelBuilder.Entity("BeeOrganizer.Models.Panj", b =>
                {
                    b.Property<int>("PanjID")
                        .HasColumnType("int");

                    b.Property<int?>("CebeljnjakID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PanjID");

                    b.HasIndex("CebeljnjakID");

                    b.ToTable("Panj", (string)null);
                });

            modelBuilder.Entity("BeeOrganizer.Models.Prihodek", b =>
                {
                    b.Property<int>("PrihodekID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<int>("Količina")
                        .HasColumnType("int");

                    b.Property<int?>("UporabnikID")
                        .HasColumnType("int");

                    b.Property<int>("Vrednost")
                        .HasColumnType("int");

                    b.Property<string>("Vrsta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PrihodekID");

                    b.HasIndex("UporabnikID");

                    b.ToTable("Prihodek", (string)null);
                });

            modelBuilder.Entity("BeeOrganizer.Models.Uporabnik", b =>
                {
                    b.Property<int>("UporabnikID")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Lokacija")
                        .HasColumnType("int");

                    b.HasKey("UporabnikID");

                    b.ToTable("Uporabnik", (string)null);
                });

            modelBuilder.Entity("BeeOrganizer.Models.Cebeljnjak", b =>
                {
                    b.HasOne("BeeOrganizer.Models.Uporabnik", "Uporabnik")
                        .WithMany("Cebeljnjaki")
                        .HasForeignKey("UporabnikID");

                    b.Navigation("Uporabnik");
                });

            modelBuilder.Entity("BeeOrganizer.Models.Odhodek", b =>
                {
                    b.HasOne("BeeOrganizer.Models.Uporabnik", "Uporabnik")
                        .WithMany("Odhodki")
                        .HasForeignKey("UporabnikID");

                    b.Navigation("Uporabnik");
                });

            modelBuilder.Entity("BeeOrganizer.Models.Panj", b =>
                {
                    b.HasOne("BeeOrganizer.Models.Cebeljnjak", "Cebeljnjak")
                        .WithMany("Panji")
                        .HasForeignKey("CebeljnjakID");

                    b.Navigation("Cebeljnjak");
                });

            modelBuilder.Entity("BeeOrganizer.Models.Prihodek", b =>
                {
                    b.HasOne("BeeOrganizer.Models.Uporabnik", "Uporabnik")
                        .WithMany("Prihodki")
                        .HasForeignKey("UporabnikID");

                    b.Navigation("Uporabnik");
                });

            modelBuilder.Entity("BeeOrganizer.Models.Cebeljnjak", b =>
                {
                    b.Navigation("Panji");
                });

            modelBuilder.Entity("BeeOrganizer.Models.Uporabnik", b =>
                {
                    b.Navigation("Cebeljnjaki");

                    b.Navigation("Odhodki");

                    b.Navigation("Prihodki");
                });
#pragma warning restore 612, 618
        }
    }
}
